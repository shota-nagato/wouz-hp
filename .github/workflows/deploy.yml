name: Deploy Next.js

on:
  workflow_dispatch:
  push:
    branches:
      - staging

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Fail if not on allowed branch
        run: |
          echo "Current branch: ${{ github.ref_name }}"
          if [[ "${{ github.ref_name }}" != "main" && "${{ github.ref_name }}" != "staging" ]]; then
            echo "‚ùå „Åì„ÅÆ„ÉØ„Éº„ÇØ„Éï„É≠„Éº„ÅØ 'main' „Åæ„Åü„ÅØ 'staging' „Éñ„É©„É≥„ÉÅ„Åß„ÅÆ„ÅøÂÆüË°å„Åß„Åç„Åæ„Åô„ÄÇ"
            exit 1
          fi

      - name: Set environment variables
        id: setenv
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "app_env=prod" >> $GITHUB_ENV
            echo "environment=prod" >> $GITHUB_ENV
          else
            echo "app_env=dev" >> $GITHUB_ENV
            echo "environment=stg" >> $GITHUB_ENV
          fi
          echo "aws_region=ap-northeast-1" >> $GITHUB_ENV
          echo "next_bucket=${{ vars.NEXT_BUCKET }}" >> $GITHUB_ENV
          echo "cloudfront_id=${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}" >> $GITHUB_ENV
          echo "deploy_role=${{ vars.DEPLOY_ROLE_ARN }}" >> $GITHUB_ENV

      - uses: actions/checkout@v4

      - run: corepack enable

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.aws_region }}
          role-to-assume: ${{ env.deploy_role }}

      - name: Set SHORT_SHA and show commit info
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          echo "üöÄ Deploying commit: $SHORT_SHA"
          echo "üîç Commit message: $(git log -1 --pretty=%B)"

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build Next.js app
        run: pnpm run build
        env:
          NODE_ENV: production

      - name: Deploy to S3
        run: |
          aws s3 sync ./out s3://${{ env.next_bucket }} --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.cloudfront_id }} \
            --paths "/*"
